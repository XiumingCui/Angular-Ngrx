{"version":3,"file":"router-store.umd.js","sources":["../../../../../../../../../../execroot/ngrx/modules/router-store/src/serializer.ts","../../../../../../../../../../execroot/ngrx/modules/router-store/src/router_store_module.ts","../../../../../../../../../../execroot/ngrx/modules/router-store/router-store.ts"],"sourcesContent":["import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nexport abstract class RouterStateSerializer<T> {\n  abstract serialize(routerState: RouterStateSnapshot): T;\n}\n\nexport interface SerializedRouterStateSnapshot {\n  root: ActivatedRouteSnapshot;\n  url: string;\n}\n\nexport class DefaultRouterStateSerializer\n  implements RouterStateSerializer<SerializedRouterStateSnapshot> {\n  serialize(routerState: RouterStateSnapshot): SerializedRouterStateSnapshot {\n    return {\n      root: this.serializeRoute(routerState.root),\n      url: routerState.url,\n    };\n  }\n\n  private serializeRoute(\n    route: ActivatedRouteSnapshot\n  ): ActivatedRouteSnapshot {\n    const children = route.children.map(c => this.serializeRoute(c));\n    return {\n      params: route.params,\n      paramMap: route.paramMap,\n      data: route.data,\n      url: route.url,\n      outlet: route.outlet,\n      routeConfig: {\n        component: route.routeConfig ? route.routeConfig.component : undefined,\n      },\n      queryParams: route.queryParams,\n      queryParamMap: route.queryParamMap,\n      fragment: route.fragment,\n      component: (route.routeConfig\n        ? route.routeConfig.component\n        : undefined) as any,\n      root: undefined as any,\n      parent: undefined as any,\n      firstChild: children[0],\n      pathFromRoot: undefined as any,\n      children,\n    };\n  }\n}\n","import {\n  Inject,\n  InjectionToken,\n  ModuleWithProviders,\n  NgModule,\n} from '@angular/core';\nimport {\n  NavigationCancel,\n  NavigationError,\n  NavigationEnd,\n  Router,\n  RouterStateSnapshot,\n  RoutesRecognized,\n} from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { of } from 'rxjs';\n\nimport {\n  DefaultRouterStateSerializer,\n  RouterStateSerializer,\n  SerializedRouterStateSnapshot,\n} from './serializer';\n\n/**\n * An action dispatched when the router navigates.\n */\nexport const ROUTER_NAVIGATION = 'ROUTER_NAVIGATION';\n\n/**\n * Payload of ROUTER_NAVIGATION.\n */\nexport type RouterNavigationPayload<T> = {\n  routerState: T;\n  event: RoutesRecognized;\n};\n\n/**\n * An action dispatched when the router navigates.\n */\nexport type RouterNavigationAction<T = SerializedRouterStateSnapshot> = {\n  type: typeof ROUTER_NAVIGATION;\n  payload: RouterNavigationPayload<T>;\n};\n\n/**\n * An action dispatched when the router cancels navigation.\n */\nexport const ROUTER_CANCEL = 'ROUTER_CANCEL';\n\n/**\n * Payload of ROUTER_CANCEL.\n */\nexport type RouterCancelPayload<T, V> = {\n  routerState: V;\n  storeState: T;\n  event: NavigationCancel;\n};\n\n/**\n * An action dispatched when the router cancel navigation.\n */\nexport type RouterCancelAction<T, V = SerializedRouterStateSnapshot> = {\n  type: typeof ROUTER_CANCEL;\n  payload: RouterCancelPayload<T, V>;\n};\n\n/**\n * An action dispatched when the router errors.\n */\nexport const ROUTER_ERROR = 'ROUTE_ERROR';\n\n/**\n * Payload of ROUTER_ERROR.\n */\nexport type RouterErrorPayload<T, V> = {\n  routerState: V;\n  storeState: T;\n  event: NavigationError;\n};\n\n/**\n * An action dispatched when the router errors.\n */\nexport type RouterErrorAction<T, V = SerializedRouterStateSnapshot> = {\n  type: typeof ROUTER_ERROR;\n  payload: RouterErrorPayload<T, V>;\n};\n\n/**\n * An union type of router actions.\n */\nexport type RouterAction<T, V = SerializedRouterStateSnapshot> =\n  | RouterNavigationAction<V>\n  | RouterCancelAction<T, V>\n  | RouterErrorAction<T, V>;\n\nexport type RouterReducerState<T = SerializedRouterStateSnapshot> = {\n  state: T;\n  navigationId: number;\n};\n\nexport function routerReducer<T = SerializedRouterStateSnapshot>(\n  state: RouterReducerState<T> | undefined,\n  action: RouterAction<any, T>\n): RouterReducerState<T> {\n  switch (action.type) {\n    case ROUTER_NAVIGATION:\n    case ROUTER_ERROR:\n    case ROUTER_CANCEL:\n      return {\n        state: action.payload.routerState,\n        navigationId: action.payload.event.id,\n      };\n    default:\n      return state as RouterReducerState<T>;\n  }\n}\n\nexport interface StoreRouterConfig {\n  stateKey?: string;\n}\n\nexport const _ROUTER_CONFIG = new InjectionToken(\n  '@ngrx/router-store Internal Configuration'\n);\nexport const ROUTER_CONFIG = new InjectionToken(\n  '@ngrx/router-store Configuration'\n);\nexport const DEFAULT_ROUTER_FEATURENAME = 'routerReducer';\n\nexport function _createDefaultRouterConfig(\n  config: StoreRouterConfig | StoreRouterConfigFunction\n): StoreRouterConfig {\n  let _config: StoreRouterConfig;\n\n  if (typeof config === 'function') {\n    _config = config();\n  } else {\n    _config = config || {};\n  }\n\n  return {\n    stateKey: DEFAULT_ROUTER_FEATURENAME,\n    ..._config,\n  };\n}\n\nexport type StoreRouterConfigFunction = () => StoreRouterConfig;\n\n/**\n * Connects RouterModule with StoreModule.\n *\n * During the navigation, before any guards or resolvers run, the router will dispatch\n * a ROUTER_NAVIGATION action, which has the following signature:\n *\n * ```\n * export type RouterNavigationPayload = {\n *   routerState: SerializedRouterStateSnapshot,\n *   event: RoutesRecognized\n * }\n * ```\n *\n * Either a reducer or an effect can be invoked in response to this action.\n * If the invoked reducer throws, the navigation will be canceled.\n *\n * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n *\n * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n * which can be used to restore the consistency of the store.\n *\n * Usage:\n *\n * ```typescript\n * @NgModule({\n *   declarations: [AppCmp, SimpleCmp],\n *   imports: [\n *     BrowserModule,\n *     StoreModule.forRoot(mapOfReducers),\n *     RouterModule.forRoot([\n *       { path: '', component: SimpleCmp },\n *       { path: 'next', component: SimpleCmp }\n *     ]),\n *     StoreRouterConnectingModule\n *   ],\n *   bootstrap: [AppCmp]\n * })\n * export class AppModule {\n * }\n * ```\n */\n@NgModule({\n  providers: [\n    { provide: RouterStateSerializer, useClass: DefaultRouterStateSerializer },\n    {\n      provide: _ROUTER_CONFIG,\n      useValue: { stateKey: DEFAULT_ROUTER_FEATURENAME },\n    },\n    {\n      provide: ROUTER_CONFIG,\n      useFactory: _createDefaultRouterConfig,\n      deps: [_ROUTER_CONFIG],\n    },\n  ],\n})\nexport class StoreRouterConnectingModule {\n  static forRoot(\n    config?: StoreRouterConfig | StoreRouterConfigFunction\n  ): ModuleWithProviders;\n  static forRoot(\n    config: StoreRouterConfig | StoreRouterConfigFunction = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: StoreRouterConnectingModule,\n      providers: [\n        { provide: _ROUTER_CONFIG, useValue: config },\n        {\n          provide: ROUTER_CONFIG,\n          useFactory: _createDefaultRouterConfig,\n          deps: [_ROUTER_CONFIG],\n        },\n      ],\n    };\n  }\n\n  private routerState: SerializedRouterStateSnapshot;\n  private storeState: any;\n  private lastRoutesRecognized: RoutesRecognized;\n\n  private dispatchTriggeredByRouter: boolean = false; // used only in dev mode in combination with routerReducer\n  private navigationTriggeredByDispatch: boolean = false; // used only in dev mode in combination with routerReducer\n  private stateKey: string;\n\n  constructor(\n    private store: Store<any>,\n    private router: Router,\n    private serializer: RouterStateSerializer<SerializedRouterStateSnapshot>,\n    @Inject(ROUTER_CONFIG) private config: StoreRouterConfig\n  ) {\n    this.stateKey = this.config.stateKey as string;\n\n    this.setUpBeforePreactivationHook();\n    this.setUpStoreStateListener();\n    this.setUpStateRollbackEvents();\n  }\n\n  private setUpBeforePreactivationHook(): void {\n    (<any>this.router).hooks.beforePreactivation = (\n      routerState: RouterStateSnapshot\n    ) => {\n      this.routerState = this.serializer.serialize(routerState);\n      if (this.shouldDispatchRouterNavigation()) {\n        this.dispatchRouterNavigation();\n      }\n      return of(true);\n    };\n  }\n\n  private setUpStoreStateListener(): void {\n    this.store.subscribe(s => {\n      this.storeState = s;\n    });\n    this.store.pipe(select(this.stateKey)).subscribe(() => {\n      this.navigateIfNeeded();\n    });\n  }\n\n  private shouldDispatchRouterNavigation(): boolean {\n    if (!this.storeState[this.stateKey]) return true;\n    return !this.navigationTriggeredByDispatch;\n  }\n\n  private navigateIfNeeded(): void {\n    if (\n      !this.storeState[this.stateKey] ||\n      !this.storeState[this.stateKey].state\n    ) {\n      return;\n    }\n    if (this.dispatchTriggeredByRouter) return;\n\n    if (this.router.url !== this.storeState[this.stateKey].state.url) {\n      this.navigationTriggeredByDispatch = true;\n      this.router.navigateByUrl(this.storeState[this.stateKey].state.url);\n    }\n  }\n\n  private setUpStateRollbackEvents(): void {\n    this.router.events.subscribe(e => {\n      if (e instanceof RoutesRecognized) {\n        this.lastRoutesRecognized = e;\n      } else if (e instanceof NavigationCancel) {\n        this.dispatchRouterCancel(e);\n      } else if (e instanceof NavigationError) {\n        this.dispatchRouterError(e);\n      } else if (e instanceof NavigationEnd) {\n        this.dispatchTriggeredByRouter = false;\n        this.navigationTriggeredByDispatch = false;\n      }\n    });\n  }\n\n  private dispatchRouterNavigation(): void {\n    this.dispatchRouterAction(ROUTER_NAVIGATION, {\n      routerState: this.routerState,\n      event: new RoutesRecognized(\n        this.lastRoutesRecognized.id,\n        this.lastRoutesRecognized.url,\n        this.lastRoutesRecognized.urlAfterRedirects,\n        this.routerState\n      ),\n    });\n  }\n\n  private dispatchRouterCancel(event: NavigationCancel): void {\n    this.dispatchRouterAction(ROUTER_CANCEL, {\n      routerState: this.routerState,\n      storeState: this.storeState,\n      event,\n    });\n  }\n\n  private dispatchRouterError(event: NavigationError): void {\n    this.dispatchRouterAction(ROUTER_ERROR, {\n      routerState: this.routerState,\n      storeState: this.storeState,\n      event: new NavigationError(event.id, event.url, `${event}`),\n    });\n  }\n\n  private dispatchRouterAction(type: string, payload: any): void {\n    this.dispatchTriggeredByRouter = true;\n    try {\n      this.store.dispatch({ type, payload });\n    } finally {\n      this.dispatchTriggeredByRouter = false;\n      this.navigationTriggeredByDispatch = false;\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {_ROUTER_CONFIG as Éµngrx_modules_router_store_router_store_a,_createDefaultRouterConfig as Éµngrx_modules_router_store_router_store_b} from './src/router_store_module';"],"names":["InjectionToken","store","router","of","select","RoutesRecognized","NavigationCancel","NavigationError","NavigationEnd","NgModule","Store","Router","Inject"],"mappings":"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"}